#
# qmake configuration for freebsd-clang33 (using clang++33 from ports/lang/clang33)
#

MAKEFILE_GENERATOR	= UNIX
TARGET_PLATFORM		= unix
TEMPLATE		= app
CONFIG			+= qt warn_on release thread link_prl gdb_dwarf_index
QT			+= core gui

QMAKE_CFLAGS_THREAD	= 

QMAKE_CXXFLAGS_THREAD	= $$QMAKE_CFLAGS_THREAD

# Addon software goes into /usr/local on the BSDs, by default we will look there
QMAKE_INCDIR		= $$[QT_INSTALL_HEADERS] /usr/local/include
QMAKE_LIBDIR		= $$[QT_INSTALL_LIBS] /usr/local/lib
QMAKE_INCDIR_X11	= /usr/local/include
QMAKE_LIBDIR_X11	= /usr/local/lib
QMAKE_INCDIR_QT		= $$[QT_INSTALL_HEADERS]
QMAKE_LIBDIR_QT		= $$[QT_INSTALL_LIBS]
QMAKE_INCDIR_OPENGL	= /usr/local/include
QMAKE_LIBDIR_OPENGL	= /usr/local/lib

QMAKE_LFLAGS_THREAD	= -pthread

QMAKE_LIBS		=
QMAKE_LIBS_DYNLOAD	=
QMAKE_LIBS_X11		= -lXext -lX11 -lm
QMAKE_LIBS_X11SM	= -lSM -lICE
QMAKE_LIBS_OPENGL	= -lGL
QMAKE_LIBS_OPENGL_QT	= -lGL
QMAKE_LIBS_THREAD	=

QMAKE_MOC		= $$[QT_INSTALL_BINS]/moc-qt4
QMAKE_UIC		= $$[QT_INSTALL_BINS]/uic-qt4

QMAKE_AR		= ar cqs
QMAKE_OBJCOPY           = objcopy
QMAKE_RANLIB		=

QMAKE_TAR		= tar -cf
QMAKE_GZIP		= gzip -9f

QMAKE_COPY		= cp -f
QMAKE_MOVE		= mv -f
QMAKE_DEL_FILE		= rm -f
QMAKE_DEL_DIR		= rmdir
QMAKE_CHK_DIR_EXISTS	= test -d
QMAKE_MKDIR		= mkdir -p
include(/usr/local/share/qt4/mkspecs/common/unix.conf)
include(/usr/local/share/qt4/mkspecs/common/gcc-base-unix.conf)
include(/usr/local/share/qt4/mkspecs/common/clang.conf)

# Redefined here because g++-base.conf sets QMAKE_CC and QMAKE_CXX
# to gcc and g++, respectively.
QMAKE_CC           = /usr/local/bin/clang33
QMAKE_CXX          = /usr/local/bin/clang++33
QMAKE_LINK_C       = $$QMAKE_CC
QMAKE_LINK_C_SHLIB = $$QMAKE_CC
QMAKE_LINK         = $$QMAKE_CXX
QMAKE_LINK_SHLIB   = $$QMAKE_CXX

load(qt_config)
